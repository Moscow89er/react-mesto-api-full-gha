{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batumi_89er\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport * as auth from '../utils/auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    handleLogin\n  } = _ref;\n  const [formValue, setFormValue] = useState({\n    password: '',\n    email: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!formValue.password || !formValue.email) {\n      return;\n    }\n    auth.authorize(formValue.password, formValue.email).then(data => {\n      console.log(data);\n      if (data.jwt) {\n        setFormValue({\n          password: '',\n          email: ''\n        });\n        handleLogin();\n        navigate('/', {\n          replace: true\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form form-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form__title form__title-login\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form__type__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue.email,\n        onChange: handleChange,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        className: \"form__input form__input-login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue.password,\n        onChange: handleChange,\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"form__input form__input-login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__submit-button form__submit-button-login\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"BePVyMgAtMbyUte0Ixrt/lP0i4g=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","auth","jsxDEV","_jsxDEV","Login","_ref","_s","handleLogin","formValue","setFormValue","password","email","navigate","handleChange","evt","name","value","target","handleSubmit","preventDefault","authorize","then","data","console","log","jwt","replace","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Batumi_89er/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as auth from '../utils/auth.js';\r\n\r\nfunction Login ({ handleLogin }) {\r\n    const [formValue, setFormValue] = useState({\r\n        password: '',\r\n        email: ''\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (evt) => {\r\n        const {name, value} = evt.target;\r\n\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (!formValue.password || !formValue.email) {\r\n            return;\r\n        }\r\n        auth.authorize(formValue.password, formValue.email)\r\n            .then((data) => {\r\n                console.log(data)\r\n                if (data.jwt) {\r\n                    setFormValue({password:'', email: ''});\r\n                    handleLogin();\r\n                    navigate('/', {replace: true});\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <section className=\"form form-login\">\r\n            <h1 className=\"form__title form__title-login\">Вход</h1>\r\n            <form onSubmit={handleSubmit} className=\"form__type__form\">\r\n                <input\r\n                    value={formValue.email}\r\n                    onChange={handleChange}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form__input form__input-login\"\r\n                />\r\n                <input\r\n                    value={formValue.password}\r\n                    onChange={handleChange}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Пароль\"\r\n                    className=\"form__input form__input-login\"\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"form__submit-button form__submit-button-login\"\r\n                    >Войти\r\n                </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}