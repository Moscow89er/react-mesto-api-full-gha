{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nfunction useFormValidator() {\n  _s();\n  const [formValues, setFormValues] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n  const handleInputChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n    setFormErrors({\n      ...formErrors,\n      [name]: evt.target.validationMessage\n    });\n    setIsValid(evt.target.closest('form').checkValidity());\n  };\n  const resetForm = useCallback(() => {\n    setFormValues({});\n    setFormErrors({});\n    setIsValid(false);\n  }, [setFormValues, setFormErrors, setIsValid]);\n  return {\n    formValues,\n    formErrors,\n    isValid,\n    handleInputChange,\n    resetForm\n  };\n}\n_s(useFormValidator, \"jieBhJxTIEorGFufv+N6JXj27H4=\");\nexport default useFormValidator;","map":{"version":3,"names":["useState","useCallback","useFormValidator","_s","formValues","setFormValues","formErrors","setFormErrors","isValid","setIsValid","handleInputChange","evt","name","value","target","validationMessage","closest","checkValidity","resetForm"],"sources":["C:/Users/Batumi_89er/dev/react-mesto-auth/src/utils/useFormValidator.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nfunction useFormValidator () {\r\n    const [formValues, setFormValues] = useState({});\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [isValid, setIsValid] = useState(true);\r\n\r\n    const handleInputChange = (evt) => {\r\n        const  { name, value } = evt.target;\r\n        setFormValues({...formValues, [name]: value});\r\n        setFormErrors({...formErrors, [name]: evt.target.validationMessage});\r\n        setIsValid(evt.target.closest('form').checkValidity());\r\n    };\r\n\r\n    const resetForm = useCallback(() => {\r\n        setFormValues({});\r\n        setFormErrors({});\r\n        setIsValid(false);\r\n    }, [setFormValues, setFormErrors, setIsValid]);\r\n\r\n    return { formValues, formErrors, isValid, handleInputChange, resetForm };\r\n}\r\n\r\nexport default useFormValidator;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,gBAAgBA,CAAA,EAAI;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMU,iBAAiB,GAAIC,GAAG,IAAK;IAC/B,MAAO;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,GAAG,CAACG,MAAM;IACnCT,aAAa,CAAC;MAAC,GAAGD,UAAU;MAAE,CAACQ,IAAI,GAAGC;IAAK,CAAC,CAAC;IAC7CN,aAAa,CAAC;MAAC,GAAGD,UAAU;MAAE,CAACM,IAAI,GAAGD,GAAG,CAACG,MAAM,CAACC;IAAiB,CAAC,CAAC;IACpEN,UAAU,CAACE,GAAG,CAACG,MAAM,CAACE,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,EAAE,CAAC;EAC1D,CAAC;EAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC,MAAM;IAChCI,aAAa,CAAC,CAAC,CAAC,CAAC;IACjBE,aAAa,CAAC,CAAC,CAAC,CAAC;IACjBE,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACJ,aAAa,EAAEE,aAAa,EAAEE,UAAU,CAAC,CAAC;EAE9C,OAAO;IAAEL,UAAU;IAAEE,UAAU;IAAEE,OAAO;IAAEE,iBAAiB;IAAEQ;EAAU,CAAC;AAC5E;AAACf,EAAA,CAnBQD,gBAAgB;AAqBzB,eAAeA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}