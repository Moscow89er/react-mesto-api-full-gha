{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batumi_89er\\\\dev\\\\mesto-react\\\\src\\\\components\\\\AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport useFormValidator from '../utils/useFormValidator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onAddPlace,\n    isLoading\n  } = _ref;\n  const cardnameRef = React.useRef('');\n  const cardlinkRef = React.useRef('');\n  const {\n    formValues,\n    formErrors,\n    isValid,\n    handleInputChange,\n    resetForm,\n    setFormValues,\n    setIsValid\n  } = useFormValidator();\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      name: cardnameRef.current.value,\n      link: cardlinkRef.current.value\n    });\n  }\n  ;\n  React.useEffect(() => {\n    cardnameRef.current.value = '';\n    cardlinkRef.current.value = '';\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    handleSubmit: handleSubmit,\n    isLoading: isLoading,\n    buttonLoadingText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435...\",\n    name: \"add\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: cardnameRef,\n      id: \"cardname\",\n      type: \"text\",\n      name: \"cardname\",\n      onChange: handleInputChange,\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      className: \"popup__input popup__input_type_cardname\",\n      minLength: \"2\",\n      maxLength: \"30\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cardname-error popup__form-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: cardlinkRef,\n      id: \"cardlink\",\n      type: \"url\",\n      name: \"cardlink\",\n      onChange: handleInputChange,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: \"popup__input popup__input_type_cardlink\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cardlink-error popup__form-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPlacePopup, \"oxB6AnkbfmvB7/Vz/p2mdTnLSvM=\", false, function () {\n  return [useFormValidator];\n});\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","PopupWithForm","useFormValidator","jsxDEV","_jsxDEV","AddPlacePopup","_ref","_s","isOpen","onClose","onAddPlace","isLoading","cardnameRef","useRef","cardlinkRef","formValues","formErrors","isValid","handleInputChange","resetForm","setFormValues","setIsValid","handleSubmit","evt","preventDefault","name","current","value","link","useEffect","buttonLoadingText","title","buttonText","children","ref","id","type","onChange","placeholder","className","minLength","maxLength","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Batumi_89er/dev/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport useFormValidator from '../utils/useFormValidator.js';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\r\n    const cardnameRef = React.useRef('');\r\n    const cardlinkRef = React.useRef('');\r\n\r\n\r\n    const { formValues, formErrors, isValid, handleInputChange, resetForm, setFormValues, setIsValid } = useFormValidator();\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        onAddPlace({\r\n            name: cardnameRef.current.value,\r\n            link: cardlinkRef.current.value\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        cardnameRef.current.value = '';\r\n        cardlinkRef.current.value = '';\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            handleSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n            buttonLoadingText=\"Сохранение...\"\r\n            name=\"add\"\r\n            title=\"Новое место\"\r\n            buttonText=\"Создать\"\r\n        >\r\n            <input\r\n                ref={cardnameRef}\r\n                id=\"cardname\"\r\n                type=\"text\"\r\n                name=\"cardname\"\r\n                onChange={handleInputChange}\r\n                placeholder=\"Название\"\r\n                className=\"popup__input popup__input_type_cardname\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                required\r\n            />\r\n            <span className=\"cardname-error popup__form-error\"></span>\r\n            <input\r\n                ref={cardlinkRef}\r\n                id=\"cardlink\"\r\n                type=\"url\"\r\n                name=\"cardlink\"\r\n                onChange={handleInputChange}\r\n                placeholder=\"Ссылка на картинку\"\r\n                className=\"popup__input popup__input_type_cardlink\"\r\n                required\r\n            />\r\n            { <span className=\"cardlink-error popup__form-error\"></span>}\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,aAAaA,CAAAC,IAAA,EAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,MAAM;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAL,IAAA;EAC7D,MAAMM,WAAW,GAAGZ,KAAK,CAACa,MAAM,CAAC,EAAE,CAAC;EACpC,MAAMC,WAAW,GAAGd,KAAK,CAACa,MAAM,CAAC,EAAE,CAAC;EAGpC,MAAM;IAAEE,UAAU;IAAEC,UAAU;IAAEC,OAAO;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGnB,gBAAgB,EAAE;EAEvH,SAASoB,YAAYA,CAACC,GAAG,EAAE;IACvBA,GAAG,CAACC,cAAc,EAAE;IAEpBd,UAAU,CAAC;MACPe,IAAI,EAAEb,WAAW,CAACc,OAAO,CAACC,KAAK;MAC/BC,IAAI,EAAEd,WAAW,CAACY,OAAO,CAACC;IAC9B,CAAC,CAAC;EACN;EAAC;EAED3B,KAAK,CAAC6B,SAAS,CAAC,MAAM;IAClBjB,WAAW,CAACc,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9Bb,WAAW,CAACY,OAAO,CAACC,KAAK,GAAG,EAAE;EAClC,CAAC,EAAE,CAACnB,MAAM,CAAC,CAAC;EAEZ,oBACIJ,OAAA,CAACH,aAAa;IACVO,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBa,YAAY,EAAEA,YAAa;IAC3BX,SAAS,EAAEA,SAAU;IACrBmB,iBAAiB,EAAC,iEAAe;IACjCL,IAAI,EAAC,KAAK;IACVM,KAAK,EAAC,+DAAa;IACnBC,UAAU,EAAC,4CAAS;IAAAC,QAAA,gBAEpB7B,OAAA;MACI8B,GAAG,EAAEtB,WAAY;MACjBuB,EAAE,EAAC,UAAU;MACbC,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,UAAU;MACfY,QAAQ,EAAEnB,iBAAkB;MAC5BoB,WAAW,EAAC,kDAAU;MACtBC,SAAS,EAAC,yCAAyC;MACnDC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV,eACF1C,OAAA;MAAMmC,SAAS,EAAC;IAAkC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC1D1C,OAAA;MACI8B,GAAG,EAAEpB,WAAY;MACjBqB,EAAE,EAAC,UAAU;MACbC,IAAI,EAAC,KAAK;MACVX,IAAI,EAAC,UAAU;MACfY,QAAQ,EAAEnB,iBAAkB;MAC5BoB,WAAW,EAAC,oGAAoB;MAChCC,SAAS,EAAC,yCAAyC;MACnDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV,eACA1C,OAAA;MAAMmC,SAAS,EAAC;IAAkC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChD;AAExB;AAACvC,EAAA,CA1DQF,aAAa;EAAA,QAKmFH,gBAAgB;AAAA;AAAA6C,EAAA,GALhH1C,aAAa;AA4DtB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}