{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batumi_89er\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport * as auth from '../utils/auth.js';\nimport useFormValidator from '../utils/useFormValidator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    onLoggedIn,\n    openInfoTooltip,\n    onError\n  } = _ref;\n  const {\n    formValues,\n    handleInputChange,\n    setFormValues\n  } = useFormValidator();\n  const navigate = useNavigate();\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!formValues.password || !formValues.email) {\n      return;\n    }\n    auth.authorize(formValues.password, formValues.email).then(data => {\n      if (data.token) {\n        setFormValues({\n          password: '',\n          email: ''\n        });\n        onLoggedIn();\n        navigate('/', {\n          replace: true\n        });\n      }\n    }).catch(err => {\n      onError(true);\n      openInfoTooltip(true);\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form form-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form__title form__title-login\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form__type__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.email,\n        onChange: handleInputChange,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        className: \"form__input form__input-login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.password,\n        onChange: handleInputChange,\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"form__input form__input-login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__submit-button form__submit-button-login\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"SVrore9f8PRhDYg9rtzXXWsHZ3s=\", false, function () {\n  return [useFormValidator, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","auth","useFormValidator","jsxDEV","_jsxDEV","Login","_ref","_s","onLoggedIn","openInfoTooltip","onError","formValues","handleInputChange","setFormValues","navigate","handleSubmit","evt","preventDefault","password","email","authorize","then","data","token","replace","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","type","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Batumi_89er/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as auth from '../utils/auth.js';\r\nimport useFormValidator from '../utils/useFormValidator.js';\r\n\r\nfunction Login ({ onLoggedIn, openInfoTooltip, onError }) {\r\n    const { formValues, handleInputChange, setFormValues } = useFormValidator();\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (!formValues.password || !formValues.email) {\r\n            return;\r\n        }\r\n        auth.authorize(formValues.password, formValues.email)\r\n            .then((data) => {\r\n                if (data.token) {\r\n                    setFormValues({password:'', email: ''});\r\n                    onLoggedIn();\r\n                    navigate('/', {replace: true});\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                onError(true);\r\n                openInfoTooltip(true);\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <section className=\"form form-login\">\r\n            <h1 className=\"form__title form__title-login\">Вход</h1>\r\n            <form onSubmit={handleSubmit} className=\"form__type__form\">\r\n                <input\r\n                    value={formValues.email}\r\n                    onChange={handleInputChange}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form__input form__input-login\"\r\n                />\r\n                <input\r\n                    value={formValues.password}\r\n                    onChange={handleInputChange}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Пароль\"\r\n                    className=\"form__input form__input-login\"\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"form__submit-button form__submit-button-login\"\r\n                    >Войти\r\n                </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}